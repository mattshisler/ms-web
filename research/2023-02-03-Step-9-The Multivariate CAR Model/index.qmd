---
title: "Step 9 - The multivariate CAR model"
description: "We explore extensions of the univariate CAR model described in Hierarchical Modeling and Analysis for Spatial data."
author:
  - name: Matthew Shisler
    affiliation: North Carloina State University - Department of Statistics
    affiliation-url: https://statistics.sciences.ncsu.edu/ 
categories: [Bayesian, MCMC, Spatial, CAR] # self-defined categories
draft: false 
format:
  html: 
    code-fold: true
execute: 
  cache: false
  freeze: auto
---


```{r}
#| label: load-packages
#| output: false
#| code-summary: "Code: Load the packages"

library(tidyverse)
library(igraph)
library(viridis)
```

## Intro

This is a test.

Here we will extend the univariate CAR model to the multivariate case. 

Consider a spatial domain $\mathcal{D} \in \mathbb{R}^2$ that is partitioned into $n$ areal units. In the univariate case we specified a spatial random effect $\boldsymbol\phi = (\phi_1,\dots,\phi_n)$ meant to capture the spatial dependence. In the multivariate case we specify a spatial random vector $\boldsymbol\phi^T = (\boldsymbol\phi_1, \boldsymbol\phi_2,\dots,\boldsymbol\phi_3)$ where each $\boldsymbol\phi_i = (\phi_{i1}, \phi_{i2},\dots, \phi_{ip})$ is $p \times 1$.

The joint distribution of $\boldsymbol\phi_i$ is derived from the full conditional distributions.
Under the Markov Random Field (MRF) assumption, the conditional distributions can be specified as
$$
p(\boldsymbol\phi_i|\boldsymbol\phi_{j\ne i}, \Gamma_i) = N\left(\sum_{i \sim j} \mathbf{B}_{ij}\boldsymbol\phi_j, \Gamma_i\right), \quad i,j = 1,\dots,n.
$$

where $\Gamma_i$ and $\mathbf{B}_{ij}$ are $p \times p$ matrices.

Recall the role of $\Gamma_i$ and $\mathbf{B}_{ij}$ are analogous to the roles of $\tau_i^2$ and $b_{ij}$, respectively, in the univariate CAR models. The matrix $\Gamma_i$ is the within unit covariance matrix which describes the dependence of the variables in the vector $\boldsymbol\phi_i$. The matrix $\mathbf{B}_{ij}$ is the matrix that allows us to weight the neighboring observations of location $i$ that are conditioned on in the full conditional. A convenient special case is to set $\mathbf{B}_{ij} = b_{ij}\mathbf{I}_p$ where $b_{ij} = w_{ij}/w_{i+}$. Recall, for a neighborhood matrix $\mathbf{W} = \{w_ij\}$,
$$
w_{ij} = 
\begin{cases}
1 \quad \text{if} \quad j \in \mathcal{N}(i),\\
0 \quad \text{otherwise}.
\end{cases}
$$
and $w_{i+} = \sum_{j=1}^pw_{ij}$, i.e. the number of neighbors of location $i$, $|\mathcal{N}(i)|$.


Specifying the conditional distributions in this way implies the unique joint distribution, via Brook's Lemma, to be
$$
p(\boldsymbol\phi \;| \;\{\Gamma_i\}) \propto \exp\left\{-\frac{1}{2}\boldsymbol\phi^T\Gamma^{-1}(\mathbf{I}_{np} - \tilde{\mathbf{B}})\phi\right\}
$$
where $\Gamma$ is block-diagonal with block $\Gamma_i$, and $\tilde{\mathbf{B}}$ is $np \times np$ with the $(i,j)$-th block $\mathbf{B}_{ij}$.

Of course, a requirement for the multivariate normal distribution is symmetry of $\Gamma^{-1}(\mathbf{I}_{np} - \tilde{\mathbf{B}})$. Setting $\mathbf{B}_{ij} = b_{ij}\mathbf{I}_p$ where $b_{ij} = w_{ij}/w_{i+}$ leads to the symmetry condition $b_{ij}\Gamma_j = b_{ji}\Gamma_i$. Further, a common simplifying assumption would be consider the within unit covariance equal. That is, set $\Gamma_i = w_{i+}^{-1}\Sigma$ where $\Sigma$ is the $p \times p$ within unit covariance matrix for $\boldsymbol\phi_i$ and common across spatial locations $i=1,\dots,n$.

Under these assumptions we can write $\Gamma = (\mathbf{D}^{-1}\otimes\Sigma)$ where $\mathbf{D}$ is an $n \times n$ diagonal matrix with $\mathbf{D}_{ii} = w_{i+}$. And also $\tilde{\mathbf{B}} = \mathbf{B}\otimes\mathbf{I}_n$ where $\mathbf{B}_{ij} = w_{ij}/w_{i+}$, not the block matrix specification given earlier. 

With this in mind, we can write the precision of the above joint distribution in an alternate form,
$$
\begin{align*}

\Gamma^{-1}(\mathbf{I}_{np} - \tilde{\mathbf{B}}) &= (\mathbf{D}^{-1} \otimes \Sigma)^{-1}(\mathbf{I}_{np} - \mathbf{B}\otimes \mathbf{I}_p)\\
&= (\mathbf{D} \otimes \Sigma^{-1})(\mathbf{I}_{np} - \mathbf{B}\otimes \mathbf{I}_p) & \text{Kronecker Prod - Inverse}\\
&= (\mathbf{D} \otimes \Sigma^{-1}) - (\mathbf{D} \otimes \Sigma^{-1})( \mathbf{B}\otimes \mathbf{I}_n) & \text{(Matrix Mult - distributive wrt matrix addition)}\\
&= (\mathbf{D} \otimes \Sigma^{-1}) - (\mathbf{D}\mathbf{B}) \otimes (\Sigma^{-1}\mathbf{I}_n) & \text{(Kronecker Prod - mixed-product property)}\\
&= (\mathbf{D} - \mathbf{D}\mathbf{B})\otimes\Sigma^{-1} & \text{(Kronecker Prod - distributive wrt matrix addition)}\\
&= (\mathbf{D} - \mathbf{W}) \otimes \Sigma^{-1} & \text{need to verify?}
\end{align*}
$$

Let's turn to a simple example. Consider a spatial domain partitioned into $n=4$ areal units and a multivariate response with $p=2$.


First, the spatial domain.

```{r}
n <- 4
spat_domain <- expand.grid(x = 1:sqrt(n), y = 1:sqrt(n))
spat_domain$label <- 1:n

```

```{r}
ggplot(spat_domain) +
  geom_tile(aes(x, y), linewidth = 2, color = "grey50", fill="white") +
  geom_text(aes(x, y, label=label), size = 15) +
  coord_fixed() + 
  theme_void()
```

Next, the adjacency matrix $\mathbf{W}$.

```{r}
spat_domain_g <- make_lattice(c(sqrt(n),sqrt(n)), mutual = TRUE)
W <- as.matrix(as_adjacency_matrix(spat_domain_g, sparse=1))
W
```

```{r}
B <- W/rowSums(W)
B
Btilde <- kronecker(B, diag(2))
```

```{r}
D <- diag(rowSums(W))

solve(D)
p <- 2
capSigma <- matrix(c(1,0.7,
                     0.7,1), byrow = T, ncol=p)

capLambda <- kronecker(solve(D), capSigma)
```

```{r}
A1 <- solve(capLambda)%*%(diag(p*n) - Btilde)
A2 <- kronecker((D - W), solve(capSigma))

all(A1 == A2)
```



